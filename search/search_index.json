{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u00c9v\u00e9nements","text":"<p>Chez Shodo cela nous arrive de faire des \"Code Retreat\". Ce repository existe pour fournir un support des instructions d'une session.</p>"},{"location":"#cest-quoi-une-code-retreat","title":"C'est quoi une \"Code retreat\" ?","text":"<p>Une \"Code Retreat\" est un format de journ\u00e9e permettant de se poser pour coder. L'objectif est d'apprendre les uns des autres sur un exercice de code (un Kata)</p> <ul> <li>\ud83d\udd53 Par it\u00e9rations de 1h chacune<ul> <li>45 min de code</li> <li>10 mins de debrief</li> <li>5 mins de pause</li> </ul> </li> <li>\u274c A la fin de chaque it\u00e9ration, on supprime le code</li> <li>\ud83d\udc65 En bin\u00f4mes, diff\u00e9rents \u00e0 chaque it\u00e9ration</li> <li>\ud83d\udcd6 Un seul Kata de Code (l\u2019exercice) qu'on refera \u00e0 chaque it\u00e9ration</li> <li>\ud83e\uddbe Chaque it\u00e9ration proposera diff\u00e9rentes contraintes, pour travailler diff\u00e9rentes choses (chaque it\u00e9ration sera unique)</li> </ul>"},{"location":"#code-retreats","title":"Code retreats","text":"<ul> <li>2023-07-04 \u26f1\ufe0f Summer Shodo Code Retreat \u26e9\ufe0f</li> </ul>"},{"location":"constraints/code-swap/","title":"Code Swap","text":"<p>Au d\u00e9but de cette it\u00e9ration, au lieu de supprimer le code de l'it\u00e9ration pr\u00e9c\u00e9dente, vous le l\u00e9guez \u00e0 un autre bin\u00f4me.</p>","tags":["constraint"]},{"location":"constraints/cross-arms/","title":"Croiser les bras","text":"<ul> <li>Les deux membres du bin\u00f4me tapent en m\u00eame temps sur le clavier.</li> <li>Chaque personne n\u2019a le droit d\u2019utiliser qu\u2019une seule main.</li> <li>Les bras doivent \u00eatre crois\u00e9s.</li> </ul>","tags":["constraint"]},{"location":"constraints/immutable-code/","title":"Immutable Code","text":"<ul> <li>Aucun objet ne peut \u00eatre modifi\u00e9 apr\u00e8s sa cr\u00e9ation.</li> <li>Aucune variable ne peut \u00eatre r\u00e9assign\u00e9e.</li> <li>Aucune liste ou collection ne peut \u00eatre enrichie ou filtr\u00e9e apr\u00e8s sa cr\u00e9ation.</li> </ul>","tags":["constraint"]},{"location":"constraints/mob-programming/","title":"Mob Programming","text":"<p>\"Mettre toutes les personnes travaillant sur la m\u00eame chose, au m\u00eame moment dans la m\u00eame pi\u00e8ce, sur le m\u00eame ordinateur.\"</p> <p>-- Woody Zuil (traduction)</p> <p>Ici : on va se limiter \u00e0 des groupes de 3-5 personnes travaillant sur le kata.</p>","tags":["constraint"]},{"location":"constraints/no-if/","title":"Pas de \"if\"","text":"<p>Il est interdit d'utiliser les instructions conditionnelles <code>if</code> / <code>switch</code> / <code>while</code>. Les boucles <code>for</code> sont autoris\u00e9es.</p> <p>Faites preuve de cr\u00e9ativit\u00e9 pour mettre en place des algorithmes de d\u00e9cision en utilisant d\u2019autres m\u00e9canismes \u00e0 votre disposition (ex: le polymorphisme, les structures de recherche (tableau, listes, dictionnaires, Map), la compr\u00e9hension de liste, etc.).</p> <p>N'h\u00e9sitez pas \u00e0 faire appel au facilitateur pour avancer sur cette contrainte.</p>","tags":["constraint"]},{"location":"constraints/no-primitives/","title":"Pas de primitive","text":"","tags":["constraint"]},{"location":"constraints/no-primitives/#niveau-1","title":"Niveau 1 \ud83c\udf36\ufe0f","text":"<p>\ufe0fToutes m\u00e9thode (autres que les constructeurs) ne doit accepter que classes comme argument et pas de primitive. </p> <p>Les nombres, les cha\u00eenes de caract\u00e8res, etc. ne sont pas autoris\u00e9s, m\u00eame en utilisant les \"classes primitives\" de Java (Integer, Boolean, String, etc.).</p>","tags":["constraint"]},{"location":"constraints/no-primitives/#niveau-2","title":"Niveau 2 \ud83c\udf36\ufe0f\ud83c\udf36\ufe0f","text":"<p>Aucune fonction ne doit renvoyer de valeur primitive, pas m\u00eame les lambdas</p>","tags":["constraint"]},{"location":"constraints/pair-programming/","title":"Pair-Programming","text":"<p>Travailler \u00e0 deux sur un m\u00eame ordinateur n\u00e9cessite de d\u00e9finir des r\u00f4les</p> <ul> <li>Le Driver : la personne au clavier</li> <li>Le Navigator : la personne qui n\u2019est pas au clavier</li> </ul> <p>\ud83d\udca1Conseil</p> <p>Utiliser la technique du Ping-Pong sur le cycle du TDD, permet de combiner effacement les deux contraintes. (Changer de personne au fur et \u00e0 mesure du cycle RED/GREEN/REFACTOR)</p>","tags":["constraint"]},{"location":"constraints/pair-programming/ping-pong/","title":"Ping-Pong Pair-Programming","text":"<p>Le bin\u00f4mage dit ping-pong permet de coupler la pratique du bin\u00f4mage avec le TDD. Dans ce cadre, les it\u00e9rations ne sont plus rythm\u00e9es par le temps, mais par le cycle du TDD. Les r\u00f4les alternent \u00e0 chaque fois qu\u2019on termine une phase rouge du cycle de TDD.</p> <p>Exemple : Alice et Bertrand bin\u00f4ment.</p> <p>\u27a1\ufe0f Alice est pilote, Bertrand est copilote</p> <ol> <li> <p>Alice \u00e9crit un premier test en \u00e9chec et passe la main \u00e0 Bertrand.</p> <p>\u27a1\ufe0f Les r\u00f4les alternent : Alice devient copilote, Bertrand devient pilote</p> </li> <li> <p>Bertrand corrige le test.</p> </li> <li>Bertrand effectue les refactorings n\u00e9cessaires.</li> <li> <p>Bertrand \u00e9crit un nouveau test en \u00e9chec et passe la main \u00e0 Alice.</p> <p>\u27a1\ufe0f Les r\u00f4les alternent : Alice devient pilote, Bertrand devient copilote</p> </li> <li> <p>Alice corrige le test.</p> </li> <li>Alice effectue les refactorings n\u00e9cessaires.</li> <li>Le cycle recommence \u00e0 partir du point 1.</li> </ol>","tags":["constraint"]},{"location":"constraints/pair-programming/silent/","title":"Silent Pair-Programming","text":"<p>Il est interdit de parler, d'\u00e9crire ou de dessiner.</p> <p>Seul le code peut \u00eatre utilis\u00e9 pour communiquer, mais il est interdit d\u2019utiliser les commentaires de code \u00e0 cet effet.</p>","tags":["constraint"]},{"location":"constraints/pair-programming/strong-style/","title":"Strong Style Pair-Programming","text":"<p>Pour transmettre une id\u00e9e de votre esprit \u00e0 l\u2019ordinateur, il faut la faire transiter par les mains de quelqu\u2019un d\u2019autre</p> <ul> <li>Le Driver a toujours le clavier</li> <li>Le Navigator n\u2019a pas le clavier, et prend toutes les d\u00e9cision. Il donne les instructions au Driver pour que ce dernier impl\u00e9mente les id\u00e9es du Navigator (au plus haut niveau d\u2019abstraction permettant au Drvier de travailler de mani\u00e8re fluide.</li> <li>Mettez un timer de 2-5 minutes pour changer les r\u00f4les</li> </ul> <p>\ud83d\udca1Conseil</p> <p>En tant que Navigator, s\u2019exprimer avec les trois niveaux Intention/Emplacement/D\u00e9tail</p> <p>Exemple :</p> <ul> <li>Intention : \u00ab Cr\u00e9e une variable que l'on appellera 'd\u00e9compte' \u00bb</li> <li>Emplacement : \u00ab \u00c0 la ligne 27 et demi (une nouvelle ligne entre la #27 &amp; #28) \u00bb</li> <li>D\u00e9tails : \u00ab Tape v,a,r espace 'd\u00e9compte' \u00e9gal 1 \u00bb</li> </ul>","tags":["constraint"]},{"location":"constraints/refactoring/","title":"Refactoring","text":"<p>Le Refactoring ou \"remaniement du code\" est l'ensemble des techniques permettant de modifier du code sans en changer son comportement.</p> <p>Vous n'avez pas le droit de casser un test existant, ni de provoquer une erreur de compilation en modifiant le code qui vous a \u00e9t\u00e9 l\u00e9gu\u00e9.</p>","tags":["constraint"]},{"location":"constraints/tcr/","title":"Test &amp;&amp; Commit || Revert","text":"<p>Outillage :  \ud83d\udd17 https://github.com/murex/TCR  \ud83d\udd17 https://github.com/murex/TCR/blob/main/examples</p> <p>\u00c0 chaque fois que le code est modifi\u00e9 et sauvegard\u00e9, les tests sont lanc\u00e9s.</p> <ul> <li>Si tous les tests passent, le code est commit\u00e9</li> <li>Si au moins un test \u00e9choue, le code de prod est revert</li> </ul>","tags":["constraint"]},{"location":"constraints/tdd/","title":"Test Driven Development (TDD)","text":"","tags":["constraint"]},{"location":"constraints/tdd/#redgreenrefactor","title":"RED/GREEN/REFACTOR","text":"","tags":["constraint"]},{"location":"constraints/tdd/#3-regles-du-tdd","title":"3 R\u00e8gles du TDD","text":"","tags":["constraint"]},{"location":"constraints/tdd/#permis-de-coder","title":"Permis de coder","text":"<p>Interdit d\u2019\u00e9crire du code, sans test en \u00e9chec qui prouve que ce code est n\u00e9cessaire.</p>","tags":["constraint"]},{"location":"constraints/tdd/#une-question-a-la-fois","title":"Une question \u00e0 la fois","text":"<p>Interdit d\u2019\u00e9crire plus d\u2019un test en \u00e9chec \u00e0 la fois</p>","tags":["constraint"]},{"location":"constraints/tdd/#connaitre-les-limites","title":"Conna\u00eetre les limites","text":"<p>Interdit d\u2019\u00e9crire plus de code que n\u00e9cessaire, pour faire passer le test en cours.</p>","tags":["constraint"]},{"location":"constraints/tdd/as-if-you-meant-it/","title":"TDD As If You Meant It","text":"<p>(blog post): </p> <p>Le code ne doit \u00eatre g\u00e9n\u00e9r\u00e9 que dans les tests.</p> <p>La seule mani\u00e8re de cr\u00e9er du code de production, est de pratiquer des op\u00e9rations de refactoring comme  l'extraction de m\u00e9thodes/classes/champs/variables, etc.</p>","tags":["constraint"]},{"location":"constraints/tell-dont-ask/","title":"Tell, don't ask","text":"<p>\ud83d\udd17 https://martinfowler.com/bliki/TellDontAsk.html</p> <p>Aucune m\u00e9thode ne peut renvoyer de valeur (toutes les m\u00e9thodes doivent renvoyer void).</p> <p>Au lieu de requ\u00eater de la donn\u00e9e dans vos objets, de la manipuler et de la modifier, demandez directement \u00e0 vos objets d'effectuer les op\u00e9rations.</p>","tags":["constraint"]},{"location":"events/","title":"\u00c9v\u00e9nements","text":"<p>Chez Shodo cela nous arrive de faire des \"Code Retreat\".</p> <p>Ce repository existe pour fournir un support des instructions d'une session.</p> <ul> <li>2023-07-04 \u26f1\ufe0f Summer Shodo Code Retreat \u26e9\ufe0f</li> </ul>"},{"location":"events/2023/07/04/","title":"\u26f1\ufe0f Summer Shodo Code Retreat \u26e9\ufe0f","text":"<p>\ud83d\uddd3\ufe0f Quand ?  Mardi 04 juillet 2023</p> <p>\ud83d\udccdO\u00f9 ?  A \"L'Atelier\" \u00e0 la Cantine Num\u00e9rique</p>"},{"location":"events/2023/07/04/#agenda","title":"Agenda","text":"\ud83d\udd53 9h-9h30 Accueil &amp; Petit d\u00e9jeuner \ud83d\udd53 9h30-10h Pr\u00e9sentation de la journ\u00e9e \ud83d\udd53 10h-11h It\u00e9ration #1 \ud83d\udd53 11h-12h It\u00e9ration #2 \ud83d\udd53 12h-13h \ud83c\udf55 D\u00e9jeuner \ud83c\udf55 \ud83d\udd53 13h-14h It\u00e9ration #3 \ud83d\udd53 14h-15h It\u00e9ration #4 \ud83d\udd53 15h-16h It\u00e9ration #5 \ud83d\udd53 15h-16h It\u00e9ration #6 \ud83d\udd53 17h-17h30 Debrief et conclusion de la journ\u00e9e"},{"location":"events/2023/07/04/#le-kata","title":"Le Kata","text":"<p>Sailboat Kata</p>"},{"location":"events/2023/07/04/#deroule-de-la-journee","title":"D\u00e9roul\u00e9 de la journ\u00e9e","text":""},{"location":"events/2023/07/04/#iterations","title":"It\u00e9rations","text":"<p>\u26f1\ufe0f Summer Shodo Code Retreat \u26e9\ufe0f</p> <p>Slides</p>"},{"location":"events/2023/07/04/#iteration-1","title":"It\u00e9ration #1","text":"<ul> <li>TDD</li> <li>Pair-Programming</li> </ul>"},{"location":"events/2023/07/04/#iteration-2","title":"It\u00e9ration #2","text":"<p>  On continue \u00e0 travailler en TDD ET en Pair-Programming</p> <ul> <li>Pas de if</li> <li>Pair-Programming Ping-Pong</li> </ul>"},{"location":"events/2023/07/04/#iteration-3","title":"It\u00e9ration #3","text":"<p>  On continue \u00e0 travailler en TDD ET en Pair-Programming</p> <ul> <li>Code swap</li> <li>Refactoring</li> <li>Tell, don't ask</li> </ul>"},{"location":"events/2023/07/04/#iteration-4","title":"It\u00e9ration #4","text":"<p> On continue \u00e0 travailler en TDD ET en Pair-Programming</p> <ul> <li>Pair-Programming Strong Style</li> <li>Immutable Code</li> </ul>"},{"location":"events/2023/07/04/#iteration-5","title":"It\u00e9ration #5","text":"<p>  On continue \u00e0 travailler en TDD ET en Pair-Programming</p> <ul> <li>TDD As If You Meant It</li> <li>Silent Pair-Programming</li> </ul>"},{"location":"events/2023/07/04/#iteration-6","title":"It\u00e9ration #6","text":"<p>  On continue \u00e0 travailler en TDD</p> <ul> <li>Mob-Programming</li> </ul>"},{"location":"katas/sailboat/","title":"Sailboat Kata","text":"<p>Slides</p> <p>Bootstrap :  \ud83d\udd17 https://github.com/swkBerlin/kata-bootstraps</p> <p>Vous \u00eates \u00e0 la barre d'un petit voilier, qui cherche \u00e0 atteindre une \u00eele. Votre bateau se d\u00e9place au tour par tour en fonction du vent, lequel change \u00e0 chaque tour.</p> <p>L'objectif de ce kata est de d\u00e9velopper une fonction permettant de calculer la position du bateau \u00e0 chaque tour.</p>"},{"location":"katas/sailboat/#deplacement-du-bateau","title":"D\u00e9placement du bateau","text":"<p>On mod\u00e9lise la position du bateau comme une grille \u00e0 deux dimensions, r\u00e9put\u00e9e infinie.</p> <ul> <li>Si le vent et le bateau sont align\u00e9s, alors le bateau avance de 4 cases   </li> <li>Si le vent et le bateau sont oppos\u00e9s, alors le bateau avance de 1 case   </li> <li>Si le vent et le bateau sont orthogonaux, alors le bateau avance de 2 cases, et se d\u00e9cale d'une case dans le sens du vent   </li> </ul>"},{"location":"katas/sailboat/#navigation","title":"Navigation","text":"<p>Avant de se laisser pousser par le vent, le navigateur oriente le bateau dans le sens qui lui semble optimum pour atteindre l'\u00eele.</p> <ul> <li>Le bateau peut tourner dans le sens horaire   </li> <li>Le bateau peut tourner dans le sens anti-horaire   </li> <li>Le bateau ne tourne que d'un seul quart de tour \u00e0 la fois   </li> <li>Le bateau tourne dans la direction la plus avantageuse   </li> <li>Le bateau peut conserver sa direction   </li> </ul>"},{"location":"katas/sailboat/slides/","title":"Slides","text":""},{"location":"katas/sailboat/slides/#sailboat-kata","title":"Sailboat Kata","text":"<p>Notes:</p> <ul> <li>Vous \u00eates \u00e0 la barre d'un petit voilier, qui cherche \u00e0 atteindre une \u00eele. Votre bateau se d\u00e9place au tour par tour en fonction du vent, lequel change \u00e0 chaque tour.</li> <li>L'objectif de ce kata est de d\u00e9velopper une fonction permettant de calculer la position du bateau \u00e0 chaque tour.</li> </ul>"},{"location":"katas/sailboat/slides/#deplacement-du-bateau","title":"D\u00e9placement du bateau","text":"<p>--</p> <p>On mod\u00e9lise la position du bateau comme une grille \u00e0 deux dimensions, r\u00e9put\u00e9e infinie.</p> <p>--</p> <p>Si le vent et le bateau sont align\u00e9s, alors le bateau avance de 4 cases</p> <p></p> <p>--</p> <p>Si le vent et le bateau sont oppos\u00e9s, alors le bateau avance de 1 case</p> <p></p> <p>--</p> <p>Si le vent et le bateau sont orthogonaux, alors le bateau avance de 2 cases, et se d\u00e9cale d'une case dans le sens du vent</p> <p></p>"},{"location":"katas/sailboat/slides/#navigation","title":"Navigation","text":""},{"location":"katas/sailboat/slides/#orientation-du-bateau","title":"Orientation du bateau","text":"<p>--</p> <p>Avant de se laisser pousser par le vent, le navigateur oriente le bateau dans le sens qui lui semble optimum pour atteindre l'\u00eele.</p> <p>--</p> <p>Le bateau peut tourner dans le sens horaire</p> <p></p> <p>--</p> <p>Le bateau peut tourner dans le sens anti-horaire</p> <p></p> <p>--</p> <p>Le bateau ne tourne que d'un seul quart de tour \u00e0 la fois</p> <p></p> <p>--</p> <p>Le bateau tourne dans la direction la plus avantageuse</p> <p></p> <p>--</p> <p>Le bateau peut conserver sa direction </p> <p></p>"},{"location":"katas/sailboat/slides/#cest-parti","title":"C'est parti !","text":""}]}